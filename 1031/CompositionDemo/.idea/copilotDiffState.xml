<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/AccountTest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/AccountTest.java" />
              <option name="originalContent" value="import java.util.ArrayList;&#10;import java.util.List;&#10;import java.util.Scanner;&#10;&#10;public class AccountTest {&#10;    public static void main(String[] args) {&#10;        List&lt;Account&gt; customers = new ArrayList&lt;&gt;(); // 儲存客戶帳戶的List&#10;        Account acc1 = new Account(&quot;A001&quot;, &quot;Alice&quot;,&quot;A12345678&quot;, 5000);&#10;        addCustomer(customers, acc1);&#10;        Account acc2 = new Account(&quot;A002&quot;, &quot;Bob&quot;,&quot;A33334444&quot;, 3000);&#10;        addCustomer(customers, acc2);&#10;        Account acc3 = new Account(&quot;A003&quot;, &quot;Charlie&quot;,&quot;A555556666&quot;, -100);&#10;        addCustomer(customers,  acc3);&#10;&#10;        operation(customers);&#10;        // 顯示所有客戶帳戶資訊&#10;//        System.out.println(&quot;\n所有位客戶帳戶資訊:&quot;);&#10;//        printCustomerAccounts(customers);&#10;    }&#10;&#10;    public static void operation(List&lt;Account&gt; customers) {&#10;        Scanner scanner = new Scanner(System.in);&#10;        Account selectedAccount = null;&#10;        while (true) {&#10;            menu();&#10;            System.out.print(&quot;請選擇功能(1-5): &quot;);&#10;            int choice = scanner.nextInt();&#10;            scanner.nextLine(); // 清除換行符號&#10;            switch (choice) {&#10;                case 1:&#10;                    System.out.print(&quot;輸入帳戶號碼: &quot;);&#10;                    String accNum = scanner.nextLine();&#10;                    System.out.print(&quot;輸入持有人名稱: &quot;);&#10;                    String ownerName = scanner.nextLine();&#10;                    System.out.print(&quot;輸入持有人身份證號碼: &quot;);&#10;                    String ownerID = scanner.nextLine();&#10;                    System.out.print(&quot;輸入初始餘額: &quot;);&#10;                    double initialBalance = scanner.nextDouble();&#10;                    scanner.nextLine(); // 清除換行符號&#10;                    Account newAccount = new Account(accNum, ownerName, ownerID, initialBalance);&#10;                    addCustomer(customers, newAccount);&#10;                    break;&#10;                case 2:&#10;                    System.out.print(&quot;輸入要查詢的帳戶號碼: &quot;);&#10;                    String searchAccNum = scanner.nextLine();&#10;                    selectedAccount = customerInAction(customers, searchAccNum);&#10;                    printCustomerInfo(selectedAccount);&#10;                    // 已由 printCustomerInfo 處理 null，移除可能導致 NPE 的額外 toString() 呼叫&#10;                    break;&#10;&#10;                case 3:&#10;                    System.out.println(&quot;\n所有位客戶帳戶資訊:&quot;);&#10;                    printCustomerAccounts(customers);&#10;                    break;&#10;                case 4:&#10;                    System.out.print(&quot;輸入要刪除的帳戶號碼: &quot;);&#10;                    String deleteAccNum = scanner.nextLine();&#10;                    deleteCustomer(customers, deleteAccNum);&#10;                    break;&#10;                case 5:&#10;                    System.out.println(&quot;離開系統，謝謝使用!&quot;);&#10;                    return;&#10;                default:&#10;                    System.out.println(&quot;無效的選擇，請重新輸入&quot;);&#10;            }&#10;        }&#10;    }&#10;&#10;    public static Account customerInAction(List&lt;Account&gt; customers, String accountNumber) {&#10;        for (Account account : customers) {&#10;            if (account.getAccountNumber().equals(accountNumber)) {&#10;                return account;&#10;            }&#10;        }&#10;        System.out.println(&quot;找不到指定的帳戶號碼: &quot; + accountNumber);&#10;        return null;&#10;    }&#10;&#10;    public static void addCustomer(List&lt;Account&gt; customers, Account newAccount) {&#10;        customers.add(newAccount);&#10;        System.out.println(&quot;新增客戶成功: &quot; + newAccount.getAccountNumber());&#10;    }&#10;&#10;    public static void deleteCustomer(List&lt;Account&gt; customers, String accountNumber) {&#10;        for (int i = 0; i &lt; customers.size(); i++) {&#10;            if (customers.get(i).getAccountNumber().equals(accountNumber)) {&#10;                Account removedAccount = customers.remove(i);&#10;                System.out.println(&quot;刪除客戶成功: &quot; + removedAccount.getAccountNumber() + &quot; (&quot; + removedAccount.getOwnerName() + &quot;)&quot;);&#10;                return;&#10;            }&#10;        }&#10;        System.out.println(&quot;找不到指定的帳戶號碼: &quot; + accountNumber);&#10;    }&#10;&#10;    public static void printCustomerAccounts(List&lt;Account&gt; customers) {&#10;        for (Account customer : customers) {&#10;            printCustomerInfo(customer);&#10;        }&#10;    }&#10;&#10;    public static void printCustomerInfo(Account account) {&#10;        if (account == null) {&#10;            System.out.println(&quot;無法列印帳戶資訊，帳戶不存在&quot;);&#10;            return;&#10;        }&#10;        System.out.println(account.toString());&#10;&#10;    }&#10;&#10;    // 功能選單 (1) 新增客戶 (2) 列印指定客戶帳戶資訊 (3) 顯示所有客戶帳戶資訊 (4) 刪除客戶帳戶 (5) 離開&#10;        public static void menu() {&#10;            System.out.println(&quot;功能選單:&quot;);&#10;            System.out.println(&quot;1. 新增客戶&quot;);&#10;            System.out.println(&quot;2. 列印指定客戶帳戶資訊&quot;);&#10;            System.out.println(&quot;3. 顯示所有客戶帳戶資訊&quot;);&#10;            System.out.println(&quot;4. 刪除客戶帳戶&quot;);&#10;            System.out.println(&quot;5. 離開&quot;);&#10;        }&#10;}&#10;" />
              <option name="updatedContent" value="import java.util.ArrayList;&#10;import java.util.List;&#10;import java.util.Scanner;&#10;&#10;public class AccountTest {&#10;    public static void main(String[] args) {&#10;        List&lt;Account&gt; customers = new ArrayList&lt;&gt;(); // 儲存客戶帳戶的List&#10;        Account acc1 = new Account(&quot;A001&quot;, &quot;Alice&quot;,&quot;A12345678&quot;, 5000);&#10;        addCustomer(customers, acc1);&#10;        Account acc2 = new Account(&quot;A002&quot;, &quot;Bob&quot;,&quot;A33334444&quot;, 3000);&#10;        addCustomer(customers, acc2);&#10;        Account acc3 = new Account(&quot;A003&quot;, &quot;Charlie&quot;,&quot;A555556666&quot;, -100);&#10;        addCustomer(customers,  acc3);&#10;&#10;        operation(customers);&#10;        // 顯示所有客戶帳戶資訊&#10;//        System.out.println(&quot;\n所有位客戶帳戶資訊:&quot;);&#10;//        printCustomerAccounts(customers);&#10;    }&#10;&#10;    public static void operation(List&lt;Account&gt; customers) {&#10;        Scanner scanner = new Scanner(System.in);&#10;        Account selectedAccount = null;&#10;        while (true) {&#10;            menu();&#10;            System.out.print(&quot;請選擇功能(1-5): &quot;);&#10;            int choice = scanner.nextInt();&#10;            scanner.nextLine(); // 清除換行符號&#10;            switch (choice) {&#10;                case 1:&#10;                    System.out.print(&quot;輸入帳戶號碼: &quot;);&#10;                    String accNum = scanner.nextLine();&#10;                    System.out.print(&quot;輸入持有人名稱: &quot;);&#10;                    String ownerName = scanner.nextLine();&#10;                    System.out.print(&quot;輸入持有人身份證號碼: &quot;);&#10;                    String ownerID = scanner.nextLine();&#10;                    System.out.print(&quot;輸入初始餘額: &quot;);&#10;                    double initialBalance = scanner.nextDouble();&#10;                    scanner.nextLine(); // 清除換行符號&#10;                    Account newAccount = new Account(accNum, ownerName, ownerID, initialBalance);&#10;                    addCustomer(customers, newAccount);&#10;                    break;&#10;                case 2:&#10;                    System.out.print(&quot;輸入要查詢的帳戶號碼: &quot;);&#10;                    String searchAccNum = scanner.nextLine();&#10;                    selectedAccount = customerInAction(customers, searchAccNum);&#10;                    printCustomerInfo(selectedAccount);&#10;                    // 已由 printCustomerInfo 處理 null，移除可能導致 NPE 的額外 toString() 呼叫&#10;                    break;&#10;&#10;                case 3:&#10;                    System.out.println(&quot;\n所有位客戶帳戶資訊:&quot;);&#10;                    printCustomerAccounts(customers);&#10;                    break;&#10;                case 4:&#10;                    System.out.print(&quot;輸入要刪除的帳戶號碼: &quot;);&#10;                    String deleteAccNum = scanner.nextLine();&#10;                    deleteCustomer(customers, deleteAccNum);&#10;                    break;&#10;                case 5:&#10;                    System.out.println(&quot;離開系統，謝謝使用!&quot;);&#10;                    return;&#10;                default:&#10;                    System.out.println(&quot;無效的選擇，請重新輸入&quot;);&#10;            }&#10;        }&#10;    }&#10;&#10;    public static Account customerInAction(List&lt;Account&gt; customers, String accountNumber) {&#10;        for (Account account : customers) {&#10;            if (account.getAccountNumber().equals(accountNumber)) {&#10;                return account;&#10;            }&#10;        }&#10;        System.out.println(&quot;找不到指定的帳戶號碼: &quot; + accountNumber);&#10;        return null;&#10;    }&#10;&#10;    public static void addCustomer(List&lt;Account&gt; customers, Account newAccount) {&#10;        customers.add(newAccount);&#10;        System.out.println(&quot;新增客戶成功: &quot; + newAccount.getAccountNumber());&#10;    }&#10;&#10;    public static void deleteCustomer(List&lt;Account&gt; customers, String accountNumber) {&#10;        for (int i = 0; i &lt; customers.size(); i++) {&#10;            if (customers.get(i).getAccountNumber().equals(accountNumber)) {&#10;                Account removedAccount = customers.remove(i);&#10;                System.out.println(&quot;刪除客戶成功: &quot; + removedAccount.getAccountNumber() + &quot; (&quot; + removedAccount.getOwnerName() + &quot;)&quot;);&#10;                return;&#10;            }&#10;        }&#10;        System.out.println(&quot;找不到指定的帳戶號碼: &quot; + accountNumber);&#10;    }&#10;&#10;    public static void printCustomerAccounts(List&lt;Account&gt; customers) {&#10;        for (Account customer : customers) {&#10;            printCustomerInfo(customer);&#10;        }&#10;    }&#10;&#10;    public static void printCustomerInfo(Account account) {&#10;        if (account == null) {&#10;            System.out.println(&quot;無法列印帳戶資訊，帳戶不存在&quot;);&#10;            return;&#10;        }&#10;        System.out.println(account.toString());&#10;&#10;    }&#10;&#10;    // 功能選單 (1) 新增客戶 (2) 列印指定客戶帳戶資訊 (3) 顯示所有客戶帳戶資訊 (4) 刪除客戶帳戶 (5) 離開&#10;        public static void menu() {&#10;            System.out.println(&quot;功能選單:&quot;);&#10;            System.out.println(&quot;1. 新增客戶&quot;);&#10;            System.out.println(&quot;2. 列印指定客戶帳戶資訊&quot;);&#10;            System.out.println(&quot;3. 顯示所有客戶帳戶資訊&quot;);&#10;            System.out.println(&quot;4. 刪除客戶帳戶&quot;);&#10;            System.out.println(&quot;5. 離開&quot;);&#10;        }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>